---
import { OgContentTypes } from '@enums/og-content-types.enum';
import type { HeadProps } from '@interfaces/head-props';
import { ClientRouter } from 'astro:transitions';

const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const {
  description,
  ogContent = OgContentTypes.Website,
  ogImageUrl = '/images/ogHome.png',
  ogTitle = 'Check out my website!',
  tabTitle,
} = Astro.props as HeadProps;

const formattedTitle = `${tabTitle} | Hunter Simpson`;
---

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />

  <link rel="icon" type="image/png" href="/favicon-96x96.png" sizes="96x96" />
  <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
  <link rel="shortcut icon" href="/favicon.ico" />
  <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
  <link rel="sitemap" href="/sitemap-index.xml" />

  <meta name="generator" content={Astro.generator} />
  <link rel="canonical" href={canonicalURL} />

  <title>{formattedTitle}</title>
  <meta name="title" content={formattedTitle} />
  <meta name="description" content={description} />

  <meta property="og:title" content={ogTitle} />
  <meta property="og:url" content={canonicalURL} />
  <meta property="og:image" content={new URL(ogImageUrl, Astro.url)} />
  <meta property="og:type" content={ogContent} />
  <meta property="og:description" content={description} />

  <link
    rel="alternate"
    type="application/rss+xml"
    title="Hunter Simpson's RSS Feed"
    href={new URL('rss.xml', Astro.site)}
  />

  <ClientRouter />

  <script is:inline>
    const DARK = 'dark';
    const LIGHT = 'light';

    function getTheme() {
      let theme = localStorage.theme;
      if (!theme) {
        theme = window.matchMedia('(prefers-color-scheme: dark)').matches
          ? DARK
          : LIGHT;
      }

      return theme;
    }

    function setTheme(theme) {
      document.documentElement.setAttribute('data-theme', `${theme}`);
    }

    function loadTheme() {
      setTheme(getTheme());
    }

    function setEventListener() {
      document.getElementById('themeBtn').addEventListener('click', () => {
        const newTheme = getTheme() === DARK ? LIGHT : DARK;
        localStorage.setItem('theme', newTheme);
        setTheme(newTheme);
      });
    }

    loadTheme();

    document.addEventListener('DOMContentLoaded', () => {
      setEventListener();
    });

    document.addEventListener('astro:after-swap', () => {
      loadTheme();
      setEventListener();
    });
  </script>
</head>
