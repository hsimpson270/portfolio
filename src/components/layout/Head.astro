---
import type { HeadProps } from '@interfaces/head-props';

const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const {
  description,
  ogImageUrl = '/images/ogHome.png',
  ogTitle,
  tabTitle,
} = Astro.props as HeadProps;

const formattedTitle = `${tabTitle} | Hunter Simpson`;
---

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />

  <link rel="icon" type="image/png" href="/images/favicon.png" />
  <meta name="generator" content={Astro.generator} />
  <link rel="canonical" href={canonicalURL} />

  <title>{formattedTitle}</title>
  <meta name="title" content={formattedTitle} />
  <meta name="description" content={description} />

  <meta property="og:title" content={ogTitle} />
  <meta property="og:url" content={canonicalURL} />
  <meta property="og:image" content={new URL(ogImageUrl, Astro.url)} />
  <meta property="og:type" content="website" />
  <meta property="og:description" content={description} />

  <link
    rel="alternate"
    type="application/rss+xml"
    title="Hunter Simpson's RSS Feed"
    href={new URL('rss.xml', Astro.site)}
  />

  <script is:inline>
    const DARK = 'dark';
    const LIGHT = 'light';

    function init() {
      document.getElementById('themeBtn')?.addEventListener('click', () => {
        setTheme(localStorage.theme === DARK ? LIGHT : DARK);
      });
    }

    function setClass(theme) {
      document.documentElement.classList.toggle(DARK, theme === DARK);
    }

    function setTheme(theme) {
      localStorage.setItem('theme', theme);
      setClass(theme);
    }

    if (localStorage.theme) {
      setClass(localStorage.theme);
    } else {
      const isDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
      setTheme(isDark ? DARK : LIGHT);
    }

    document.addEventListener('DOMContentLoaded', () => init());
  </script>
</head>
